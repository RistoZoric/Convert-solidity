{
	"id": "b64c7c64451ad341f14f2bfe4a587ccc",
	"_format": "hh-sol-build-info-1",
	"solcVersion": "0.8.7",
	"solcLongVersion": "0.8.7+commit.e28d00a7",
	"input": {
		"language": "Solidity",
		"sources": {
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"content": "// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.5.0) (utils/math/Math.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Standard math utilities missing in the Solidity language.\n */\nlibrary Math {\n    /**\n     * @dev Returns the largest of two numbers.\n     */\n    function max(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a >= b ? a : b;\n    }\n\n    /**\n     * @dev Returns the smallest of two numbers.\n     */\n    function min(uint256 a, uint256 b) internal pure returns (uint256) {\n        return a < b ? a : b;\n    }\n\n    /**\n     * @dev Returns the average of two numbers. The result is rounded towards\n     * zero.\n     */\n    function average(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b) / 2 can overflow.\n        return (a & b) + (a ^ b) / 2;\n    }\n\n    /**\n     * @dev Returns the ceiling of the division of two numbers.\n     *\n     * This differs from standard division with `/` in that it rounds up instead\n     * of rounding down.\n     */\n    function ceilDiv(uint256 a, uint256 b) internal pure returns (uint256) {\n        // (a + b - 1) / b can overflow on addition, so we distribute.\n        return a / b + (a % b == 0 ? 0 : 1);\n    }\n    function sqrt(uint x) public pure returns(uint) {\n        uint z = (x + 1 ) / 2; uint y = x; \n        while(z < y)\n            { \n                y = z; \n                z = ( x / z + z ) / 2; \n            } \n        return y; \n        }\n}\n"
			}
		},
		"settings": {
			"optimizer": {
				"enabled": false,
				"runs": 200
			},
			"outputSelection": {
				"*": {
					"": [
						"ast"
					],
					"*": [
						"abi",
						"metadata",
						"devdoc",
						"userdoc",
						"storageLayout",
						"evm.legacyAssembly",
						"evm.bytecode",
						"evm.deployedBytecode",
						"evm.methodIdentifiers",
						"evm.gasEstimates",
						"evm.assembly"
					]
				}
			}
		}
	},
	"output": {
		"contracts": {
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"Math": {
					"abi": [
						{
							"inputs": [
								{
									"internalType": "uint256",
									"name": "x",
									"type": "uint256"
								}
							],
							"name": "sqrt",
							"outputs": [
								{
									"internalType": "uint256",
									"name": "",
									"type": "uint256"
								}
							],
							"stateMutability": "pure",
							"type": "function"
						}
					],
					"devdoc": {
						"details": "Standard math utilities missing in the Solidity language.",
						"kind": "dev",
						"methods": {},
						"version": 1
					},
					"evm": {
						"assembly": "    /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":202:1468  library Math {... */\n  dataSize(sub_0)\n  dataOffset(sub_0)\n  0x0b\n  dup3\n  dup3\n  dup3\n  codecopy\n  dup1\n  mload\n  0x00\n  byte\n  0x73\n  eq\n  tag_1\n  jumpi\n  mstore(0x00, 0x4e487b7100000000000000000000000000000000000000000000000000000000)\n  mstore(0x04, 0x00)\n  revert(0x00, 0x24)\ntag_1:\n  mstore(0x00, address)\n  0x73\n  dup2\n  mstore8\n  dup3\n  dup2\n  return\nstop\n\nsub_0: assembly {\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":202:1468  library Math {... */\n      eq(address, deployTimeAddress())\n      mstore(0x40, 0x80)\n      jumpi(tag_1, lt(calldatasize, 0x04))\n      shr(0xe0, calldataload(0x00))\n      dup1\n      0x677342ce\n      eq\n      tag_2\n      jumpi\n    tag_1:\n      0x00\n      dup1\n      revert\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1229:1466  function sqrt(uint x) public pure returns(uint) {... */\n    tag_2:\n      tag_3\n      0x04\n      dup1\n      calldatasize\n      sub\n      dup2\n      add\n      swap1\n      tag_4\n      swap2\n      swap1\n      tag_5\n      jump\t// in\n    tag_4:\n      tag_6\n      jump\t// in\n    tag_3:\n      mload(0x40)\n      tag_7\n      swap2\n      swap1\n      tag_8\n      jump\t// in\n    tag_7:\n      mload(0x40)\n      dup1\n      swap2\n      sub\n      swap1\n      return\n    tag_6:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1271:1275  uint */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1287:1293  uint z */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1307:1308  2 */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1301:1302  1 */\n      0x01\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1297:1298  x */\n      dup5\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1297:1302  x + 1 */\n      tag_10\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_10:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1296:1308  (x + 1 ) / 2 */\n      tag_12\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_12:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1287:1308  uint z = (x + 1 ) / 2 */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1310:1316  uint y */\n      0x00\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1319:1320  x */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1310:1320  uint y = x */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1331:1436  while(z < y)... */\n    tag_14:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1341:1342  y */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1337:1338  z */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1337:1342  z < y */\n      lt\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1331:1436  while(z < y)... */\n      iszero\n      tag_15\n      jumpi\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1379:1380  z */\n      dup2\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1375:1380  y = z */\n      swap1\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1419:1420  2 */\n      0x02\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1413:1414  z */\n      dup3\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1409:1410  z */\n      dup4\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1405:1406  x */\n      dup7\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1405:1410  x / z */\n      tag_16\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_16:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1405:1414  x / z + z */\n      tag_17\n      swap2\n      swap1\n      tag_11\n      jump\t// in\n    tag_17:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1403:1420  ( x / z + z ) / 2 */\n      tag_18\n      swap2\n      swap1\n      tag_13\n      jump\t// in\n    tag_18:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1399:1420  z = ( x / z + z ) / 2 */\n      swap2\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1331:1436  while(z < y)... */\n      jump(tag_14)\n    tag_15:\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1453:1454  y */\n      dup1\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1446:1454  return y */\n      swap3\n      pop\n      pop\n      pop\n        /* \".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":1229:1466  function sqrt(uint x) public pure returns(uint) {... */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":7:146   */\n    tag_20:\n        /* \"#utility.yul\":53:58   */\n      0x00\n        /* \"#utility.yul\":91:97   */\n      dup2\n        /* \"#utility.yul\":78:98   */\n      calldataload\n        /* \"#utility.yul\":69:98   */\n      swap1\n      pop\n        /* \"#utility.yul\":107:140   */\n      tag_22\n        /* \"#utility.yul\":134:139   */\n      dup2\n        /* \"#utility.yul\":107:140   */\n      tag_23\n      jump\t// in\n    tag_22:\n        /* \"#utility.yul\":7:146   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":152:481   */\n    tag_5:\n        /* \"#utility.yul\":211:217   */\n      0x00\n        /* \"#utility.yul\":260:262   */\n      0x20\n        /* \"#utility.yul\":248:257   */\n      dup3\n        /* \"#utility.yul\":239:246   */\n      dup5\n        /* \"#utility.yul\":235:258   */\n      sub\n        /* \"#utility.yul\":231:263   */\n      slt\n        /* \"#utility.yul\":228:347   */\n      iszero\n      tag_25\n      jumpi\n        /* \"#utility.yul\":266:345   */\n      tag_26\n      tag_27\n      jump\t// in\n    tag_26:\n        /* \"#utility.yul\":228:347   */\n    tag_25:\n        /* \"#utility.yul\":386:387   */\n      0x00\n        /* \"#utility.yul\":411:464   */\n      tag_28\n        /* \"#utility.yul\":456:463   */\n      dup5\n        /* \"#utility.yul\":447:453   */\n      dup3\n        /* \"#utility.yul\":436:445   */\n      dup6\n        /* \"#utility.yul\":432:454   */\n      add\n        /* \"#utility.yul\":411:464   */\n      tag_20\n      jump\t// in\n    tag_28:\n        /* \"#utility.yul\":401:464   */\n      swap2\n      pop\n        /* \"#utility.yul\":357:474   */\n      pop\n        /* \"#utility.yul\":152:481   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":487:613   */\n    tag_29:\n        /* \"#utility.yul\":582:606   */\n      tag_31\n        /* \"#utility.yul\":600:605   */\n      dup2\n        /* \"#utility.yul\":582:606   */\n      tag_32\n      jump\t// in\n    tag_31:\n        /* \"#utility.yul\":577:580   */\n      dup3\n        /* \"#utility.yul\":570:607   */\n      mstore\n        /* \"#utility.yul\":487:613   */\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":619:857   */\n    tag_8:\n        /* \"#utility.yul\":720:724   */\n      0x00\n        /* \"#utility.yul\":758:760   */\n      0x20\n        /* \"#utility.yul\":747:756   */\n      dup3\n        /* \"#utility.yul\":743:761   */\n      add\n        /* \"#utility.yul\":735:761   */\n      swap1\n      pop\n        /* \"#utility.yul\":771:850   */\n      tag_34\n        /* \"#utility.yul\":847:848   */\n      0x00\n        /* \"#utility.yul\":836:845   */\n      dup4\n        /* \"#utility.yul\":832:849   */\n      add\n        /* \"#utility.yul\":823:829   */\n      dup5\n        /* \"#utility.yul\":771:850   */\n      tag_29\n      jump\t// in\n    tag_34:\n        /* \"#utility.yul\":619:857   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":944:1249   */\n    tag_11:\n        /* \"#utility.yul\":984:987   */\n      0x00\n        /* \"#utility.yul\":1003:1023   */\n      tag_38\n        /* \"#utility.yul\":1021:1022   */\n      dup3\n        /* \"#utility.yul\":1003:1023   */\n      tag_32\n      jump\t// in\n    tag_38:\n        /* \"#utility.yul\":998:1023   */\n      swap2\n      pop\n        /* \"#utility.yul\":1037:1057   */\n      tag_39\n        /* \"#utility.yul\":1055:1056   */\n      dup4\n        /* \"#utility.yul\":1037:1057   */\n      tag_32\n      jump\t// in\n    tag_39:\n        /* \"#utility.yul\":1032:1057   */\n      swap3\n      pop\n        /* \"#utility.yul\":1191:1192   */\n      dup3\n        /* \"#utility.yul\":1123:1189   */\n      0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff\n        /* \"#utility.yul\":1119:1193   */\n      sub\n        /* \"#utility.yul\":1116:1117   */\n      dup3\n        /* \"#utility.yul\":1113:1194   */\n      gt\n        /* \"#utility.yul\":1110:1217   */\n      iszero\n      tag_40\n      jumpi\n        /* \"#utility.yul\":1197:1215   */\n      tag_41\n      tag_42\n      jump\t// in\n    tag_41:\n        /* \"#utility.yul\":1110:1217   */\n    tag_40:\n        /* \"#utility.yul\":1241:1242   */\n      dup3\n        /* \"#utility.yul\":1238:1239   */\n      dup3\n        /* \"#utility.yul\":1234:1243   */\n      add\n        /* \"#utility.yul\":1227:1243   */\n      swap1\n      pop\n        /* \"#utility.yul\":944:1249   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1255:1440   */\n    tag_13:\n        /* \"#utility.yul\":1295:1296   */\n      0x00\n        /* \"#utility.yul\":1312:1332   */\n      tag_44\n        /* \"#utility.yul\":1330:1331   */\n      dup3\n        /* \"#utility.yul\":1312:1332   */\n      tag_32\n      jump\t// in\n    tag_44:\n        /* \"#utility.yul\":1307:1332   */\n      swap2\n      pop\n        /* \"#utility.yul\":1346:1366   */\n      tag_45\n        /* \"#utility.yul\":1364:1365   */\n      dup4\n        /* \"#utility.yul\":1346:1366   */\n      tag_32\n      jump\t// in\n    tag_45:\n        /* \"#utility.yul\":1341:1366   */\n      swap3\n      pop\n        /* \"#utility.yul\":1385:1386   */\n      dup3\n        /* \"#utility.yul\":1375:1410   */\n      tag_46\n      jumpi\n        /* \"#utility.yul\":1390:1408   */\n      tag_47\n      tag_48\n      jump\t// in\n    tag_47:\n        /* \"#utility.yul\":1375:1410   */\n    tag_46:\n        /* \"#utility.yul\":1432:1433   */\n      dup3\n        /* \"#utility.yul\":1429:1430   */\n      dup3\n        /* \"#utility.yul\":1425:1434   */\n      div\n        /* \"#utility.yul\":1420:1434   */\n      swap1\n      pop\n        /* \"#utility.yul\":1255:1440   */\n      swap3\n      swap2\n      pop\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1446:1523   */\n    tag_32:\n        /* \"#utility.yul\":1483:1490   */\n      0x00\n        /* \"#utility.yul\":1512:1517   */\n      dup2\n        /* \"#utility.yul\":1501:1517   */\n      swap1\n      pop\n        /* \"#utility.yul\":1446:1523   */\n      swap2\n      swap1\n      pop\n      jump\t// out\n        /* \"#utility.yul\":1529:1709   */\n    tag_42:\n        /* \"#utility.yul\":1577:1654   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1574:1575   */\n      0x00\n        /* \"#utility.yul\":1567:1655   */\n      mstore\n        /* \"#utility.yul\":1674:1678   */\n      0x11\n        /* \"#utility.yul\":1671:1672   */\n      0x04\n        /* \"#utility.yul\":1664:1679   */\n      mstore\n        /* \"#utility.yul\":1698:1702   */\n      0x24\n        /* \"#utility.yul\":1695:1696   */\n      0x00\n        /* \"#utility.yul\":1688:1703   */\n      revert\n        /* \"#utility.yul\":1715:1895   */\n    tag_48:\n        /* \"#utility.yul\":1763:1840   */\n      0x4e487b7100000000000000000000000000000000000000000000000000000000\n        /* \"#utility.yul\":1760:1761   */\n      0x00\n        /* \"#utility.yul\":1753:1841   */\n      mstore\n        /* \"#utility.yul\":1860:1864   */\n      0x12\n        /* \"#utility.yul\":1857:1858   */\n      0x04\n        /* \"#utility.yul\":1850:1865   */\n      mstore\n        /* \"#utility.yul\":1884:1888   */\n      0x24\n        /* \"#utility.yul\":1881:1882   */\n      0x00\n        /* \"#utility.yul\":1874:1889   */\n      revert\n        /* \"#utility.yul\":2024:2141   */\n    tag_27:\n        /* \"#utility.yul\":2133:2134   */\n      0x00\n        /* \"#utility.yul\":2130:2131   */\n      dup1\n        /* \"#utility.yul\":2123:2135   */\n      revert\n        /* \"#utility.yul\":2147:2269   */\n    tag_23:\n        /* \"#utility.yul\":2220:2244   */\n      tag_56\n        /* \"#utility.yul\":2238:2243   */\n      dup2\n        /* \"#utility.yul\":2220:2244   */\n      tag_32\n      jump\t// in\n    tag_56:\n        /* \"#utility.yul\":2213:2218   */\n      dup2\n        /* \"#utility.yul\":2210:2245   */\n      eq\n        /* \"#utility.yul\":2200:2263   */\n      tag_57\n      jumpi\n        /* \"#utility.yul\":2259:2260   */\n      0x00\n        /* \"#utility.yul\":2256:2257   */\n      dup1\n        /* \"#utility.yul\":2249:2261   */\n      revert\n        /* \"#utility.yul\":2200:2263   */\n    tag_57:\n        /* \"#utility.yul\":2147:2269   */\n      pop\n      jump\t// out\n\n    auxdata: 0xa26469706673582212202a78fc5dab88cedf754122b92a8c1f87d505a22d037a6c92a26930a88b0fb42f64736f6c63430008070033\n}\n",
						"bytecode": {
							"functionDebugData": {},
							"generatedSources": [],
							"linkReferences": {},
							"object": "61027a610053600b82828239805160001a607314610046577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063677342ce1461003a575b600080fd5b610054600480360381019061004f91906100e2565b61006a565b604051610061919061011e565b60405180910390f35b600080600260018461007c9190610139565b610086919061018f565b905060008390505b808210156100c35781905060028283866100a8919061018f565b6100b29190610139565b6100bc919061018f565b915061008e565b8092505050919050565b6000813590506100dc8161022d565b92915050565b6000602082840312156100f8576100f7610228565b5b6000610106848285016100cd565b91505092915050565b610118816101c0565b82525050565b6000602082019050610133600083018461010f565b92915050565b6000610144826101c0565b915061014f836101c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610184576101836101ca565b5b828201905092915050565b600061019a826101c0565b91506101a5836101c0565b9250826101b5576101b46101f9565b5b828204905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b610236816101c0565b811461024157600080fd5b5056fea26469706673582212202a78fc5dab88cedf754122b92a8c1f87d505a22d037a6c92a26930a88b0fb42f64736f6c63430008070033",
							"opcodes": "PUSH2 0x27A PUSH2 0x53 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH2 0x46 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x677342CE EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x1 DUP5 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0xC3 JUMPI DUP2 SWAP1 POP PUSH1 0x2 DUP3 DUP4 DUP7 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST SWAP2 POP PUSH2 0x8E JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH2 0xF7 PUSH2 0x228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106 DUP5 DUP3 DUP6 ADD PUSH2 0xCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x118 DUP2 PUSH2 0x1C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144 DUP3 PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F DUP4 PUSH2 0x1C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x184 JUMPI PUSH2 0x183 PUSH2 0x1CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A DUP3 PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5 DUP4 PUSH2 0x1C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B4 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x1C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH25 0xFC5DAB88CEDF754122B92A8C1F87D505A22D037A6C92A26930 0xA8 DUP12 0xF 0xB4 0x2F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "202:1266:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"
						},
						"deployedBytecode": {
							"functionDebugData": {
								"@sqrt_129": {
									"entryPoint": 106,
									"id": 129,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"abi_decode_t_uint256": {
									"entryPoint": 205,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_decode_tuple_t_uint256": {
									"entryPoint": 226,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"abi_encode_t_uint256_to_t_uint256_fromStack_library": {
									"entryPoint": 271,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 0
								},
								"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed": {
									"entryPoint": 286,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"allocate_unbounded": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 1
								},
								"checked_add_t_uint256": {
									"entryPoint": 313,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"checked_div_t_uint256": {
									"entryPoint": 399,
									"id": null,
									"parameterSlots": 2,
									"returnSlots": 1
								},
								"cleanup_t_uint256": {
									"entryPoint": 448,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 1
								},
								"panic_error_0x11": {
									"entryPoint": 458,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"panic_error_0x12": {
									"entryPoint": 505,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db": {
									"entryPoint": null,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b": {
									"entryPoint": 552,
									"id": null,
									"parameterSlots": 0,
									"returnSlots": 0
								},
								"validator_revert_t_uint256": {
									"entryPoint": 557,
									"id": null,
									"parameterSlots": 1,
									"returnSlots": 0
								}
							},
							"generatedSources": [
								{
									"ast": {
										"nodeType": "YulBlock",
										"src": "0:2272:1",
										"statements": [
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "59:87:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "69:29:1",
															"value": {
																"arguments": [
																	{
																		"name": "offset",
																		"nodeType": "YulIdentifier",
																		"src": "91:6:1"
																	}
																],
																"functionName": {
																	"name": "calldataload",
																	"nodeType": "YulIdentifier",
																	"src": "78:12:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "78:20:1"
															},
															"variableNames": [
																{
																	"name": "value",
																	"nodeType": "YulIdentifier",
																	"src": "69:5:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value",
																		"nodeType": "YulIdentifier",
																		"src": "134:5:1"
																	}
																],
																"functionName": {
																	"name": "validator_revert_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "107:26:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "107:33:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "107:33:1"
														}
													]
												},
												"name": "abi_decode_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "offset",
														"nodeType": "YulTypedName",
														"src": "37:6:1",
														"type": ""
													},
													{
														"name": "end",
														"nodeType": "YulTypedName",
														"src": "45:3:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "53:5:1",
														"type": ""
													}
												],
												"src": "7:139:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "218:263:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "264:83:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
																				"nodeType": "YulIdentifier",
																				"src": "266:77:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "266:79:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "266:79:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "239:7:1"
																			},
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "248:9:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "235:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "235:23:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "260:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "slt",
																	"nodeType": "YulIdentifier",
																	"src": "231:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "231:32:1"
															},
															"nodeType": "YulIf",
															"src": "228:119:1"
														},
														{
															"nodeType": "YulBlock",
															"src": "357:117:1",
															"statements": [
																{
																	"nodeType": "YulVariableDeclaration",
																	"src": "372:15:1",
																	"value": {
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "386:1:1",
																		"type": "",
																		"value": "0"
																	},
																	"variables": [
																		{
																			"name": "offset",
																			"nodeType": "YulTypedName",
																			"src": "376:6:1",
																			"type": ""
																		}
																	]
																},
																{
																	"nodeType": "YulAssignment",
																	"src": "401:63:1",
																	"value": {
																		"arguments": [
																			{
																				"arguments": [
																					{
																						"name": "headStart",
																						"nodeType": "YulIdentifier",
																						"src": "436:9:1"
																					},
																					{
																						"name": "offset",
																						"nodeType": "YulIdentifier",
																						"src": "447:6:1"
																					}
																				],
																				"functionName": {
																					"name": "add",
																					"nodeType": "YulIdentifier",
																					"src": "432:3:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "432:22:1"
																			},
																			{
																				"name": "dataEnd",
																				"nodeType": "YulIdentifier",
																				"src": "456:7:1"
																			}
																		],
																		"functionName": {
																			"name": "abi_decode_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "411:20:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "411:53:1"
																	},
																	"variableNames": [
																		{
																			"name": "value0",
																			"nodeType": "YulIdentifier",
																			"src": "401:6:1"
																		}
																	]
																}
															]
														}
													]
												},
												"name": "abi_decode_tuple_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "188:9:1",
														"type": ""
													},
													{
														"name": "dataEnd",
														"nodeType": "YulTypedName",
														"src": "199:7:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "211:6:1",
														"type": ""
													}
												],
												"src": "152:329:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "560:53:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"name": "pos",
																		"nodeType": "YulIdentifier",
																		"src": "577:3:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "600:5:1"
																			}
																		],
																		"functionName": {
																			"name": "cleanup_t_uint256",
																			"nodeType": "YulIdentifier",
																			"src": "582:17:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "582:24:1"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "570:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "570:37:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "570:37:1"
														}
													]
												},
												"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "548:5:1",
														"type": ""
													},
													{
														"name": "pos",
														"nodeType": "YulTypedName",
														"src": "555:3:1",
														"type": ""
													}
												],
												"src": "487:126:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "725:132:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "735:26:1",
															"value": {
																"arguments": [
																	{
																		"name": "headStart",
																		"nodeType": "YulIdentifier",
																		"src": "747:9:1"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "758:2:1",
																		"type": "",
																		"value": "32"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "743:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "743:18:1"
															},
															"variableNames": [
																{
																	"name": "tail",
																	"nodeType": "YulIdentifier",
																	"src": "735:4:1"
																}
															]
														},
														{
															"expression": {
																"arguments": [
																	{
																		"name": "value0",
																		"nodeType": "YulIdentifier",
																		"src": "823:6:1"
																	},
																	{
																		"arguments": [
																			{
																				"name": "headStart",
																				"nodeType": "YulIdentifier",
																				"src": "836:9:1"
																			},
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "847:1:1",
																				"type": "",
																				"value": "0"
																			}
																		],
																		"functionName": {
																			"name": "add",
																			"nodeType": "YulIdentifier",
																			"src": "832:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "832:17:1"
																	}
																],
																"functionName": {
																	"name": "abi_encode_t_uint256_to_t_uint256_fromStack_library",
																	"nodeType": "YulIdentifier",
																	"src": "771:51:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "771:79:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "771:79:1"
														}
													]
												},
												"name": "abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "headStart",
														"nodeType": "YulTypedName",
														"src": "697:9:1",
														"type": ""
													},
													{
														"name": "value0",
														"nodeType": "YulTypedName",
														"src": "709:6:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "tail",
														"nodeType": "YulTypedName",
														"src": "720:4:1",
														"type": ""
													}
												],
												"src": "619:238:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "903:35:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "913:19:1",
															"value": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "929:2:1",
																		"type": "",
																		"value": "64"
																	}
																],
																"functionName": {
																	"name": "mload",
																	"nodeType": "YulIdentifier",
																	"src": "923:5:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "923:9:1"
															},
															"variableNames": [
																{
																	"name": "memPtr",
																	"nodeType": "YulIdentifier",
																	"src": "913:6:1"
																}
															]
														}
													]
												},
												"name": "allocate_unbounded",
												"nodeType": "YulFunctionDefinition",
												"returnVariables": [
													{
														"name": "memPtr",
														"nodeType": "YulTypedName",
														"src": "896:6:1",
														"type": ""
													}
												],
												"src": "863:75:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "988:261:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "998:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1021:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1003:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1003:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "998:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1032:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1055:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1037:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1037:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1032:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1195:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x11",
																				"nodeType": "YulIdentifier",
																				"src": "1197:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1197:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1197:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1116:1:1"
																	},
																	{
																		"arguments": [
																			{
																				"kind": "number",
																				"nodeType": "YulLiteral",
																				"src": "1123:66:1",
																				"type": "",
																				"value": "0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"
																			},
																			{
																				"name": "y",
																				"nodeType": "YulIdentifier",
																				"src": "1191:1:1"
																			}
																		],
																		"functionName": {
																			"name": "sub",
																			"nodeType": "YulIdentifier",
																			"src": "1119:3:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "1119:74:1"
																	}
																],
																"functionName": {
																	"name": "gt",
																	"nodeType": "YulIdentifier",
																	"src": "1113:2:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1113:81:1"
															},
															"nodeType": "YulIf",
															"src": "1110:107:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1227:16:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1238:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1241:1:1"
																	}
																],
																"functionName": {
																	"name": "add",
																	"nodeType": "YulIdentifier",
																	"src": "1234:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1234:9:1"
															},
															"variableNames": [
																{
																	"name": "sum",
																	"nodeType": "YulIdentifier",
																	"src": "1227:3:1"
																}
															]
														}
													]
												},
												"name": "checked_add_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "975:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "978:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "sum",
														"nodeType": "YulTypedName",
														"src": "984:3:1",
														"type": ""
													}
												],
												"src": "944:305:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1297:143:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1307:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1330:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1312:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1312:20:1"
															},
															"variableNames": [
																{
																	"name": "x",
																	"nodeType": "YulIdentifier",
																	"src": "1307:1:1"
																}
															]
														},
														{
															"nodeType": "YulAssignment",
															"src": "1341:25:1",
															"value": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1364:1:1"
																	}
																],
																"functionName": {
																	"name": "cleanup_t_uint256",
																	"nodeType": "YulIdentifier",
																	"src": "1346:17:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1346:20:1"
															},
															"variableNames": [
																{
																	"name": "y",
																	"nodeType": "YulIdentifier",
																	"src": "1341:1:1"
																}
															]
														},
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "1388:22:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [],
																			"functionName": {
																				"name": "panic_error_0x12",
																				"nodeType": "YulIdentifier",
																				"src": "1390:16:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "1390:18:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "1390:18:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1385:1:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "1378:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1378:9:1"
															},
															"nodeType": "YulIf",
															"src": "1375:35:1"
														},
														{
															"nodeType": "YulAssignment",
															"src": "1420:14:1",
															"value": {
																"arguments": [
																	{
																		"name": "x",
																		"nodeType": "YulIdentifier",
																		"src": "1429:1:1"
																	},
																	{
																		"name": "y",
																		"nodeType": "YulIdentifier",
																		"src": "1432:1:1"
																	}
																],
																"functionName": {
																	"name": "div",
																	"nodeType": "YulIdentifier",
																	"src": "1425:3:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1425:9:1"
															},
															"variableNames": [
																{
																	"name": "r",
																	"nodeType": "YulIdentifier",
																	"src": "1420:1:1"
																}
															]
														}
													]
												},
												"name": "checked_div_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "x",
														"nodeType": "YulTypedName",
														"src": "1286:1:1",
														"type": ""
													},
													{
														"name": "y",
														"nodeType": "YulTypedName",
														"src": "1289:1:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "r",
														"nodeType": "YulTypedName",
														"src": "1295:1:1",
														"type": ""
													}
												],
												"src": "1255:185:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1491:32:1",
													"statements": [
														{
															"nodeType": "YulAssignment",
															"src": "1501:16:1",
															"value": {
																"name": "value",
																"nodeType": "YulIdentifier",
																"src": "1512:5:1"
															},
															"variableNames": [
																{
																	"name": "cleaned",
																	"nodeType": "YulIdentifier",
																	"src": "1501:7:1"
																}
															]
														}
													]
												},
												"name": "cleanup_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "1473:5:1",
														"type": ""
													}
												],
												"returnVariables": [
													{
														"name": "cleaned",
														"nodeType": "YulTypedName",
														"src": "1483:7:1",
														"type": ""
													}
												],
												"src": "1446:77:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1557:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1574:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1577:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1567:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1567:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1567:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1671:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1674:4:1",
																		"type": "",
																		"value": "0x11"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1664:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1664:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1664:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1695:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1698:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1688:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1688:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1688:15:1"
														}
													]
												},
												"name": "panic_error_0x11",
												"nodeType": "YulFunctionDefinition",
												"src": "1529:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1743:152:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1760:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1763:77:1",
																		"type": "",
																		"value": "35408467139433450592217433187231851964531694900788300625387963629091585785856"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1753:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1753:88:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1753:88:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1857:1:1",
																		"type": "",
																		"value": "4"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1860:4:1",
																		"type": "",
																		"value": "0x12"
																	}
																],
																"functionName": {
																	"name": "mstore",
																	"nodeType": "YulIdentifier",
																	"src": "1850:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1850:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1850:15:1"
														},
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1881:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "1884:4:1",
																		"type": "",
																		"value": "0x24"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "1874:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "1874:15:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "1874:15:1"
														}
													]
												},
												"name": "panic_error_0x12",
												"nodeType": "YulFunctionDefinition",
												"src": "1715:180:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "1990:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2007:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2010:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2000:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2000:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2000:12:1"
														}
													]
												},
												"name": "revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db",
												"nodeType": "YulFunctionDefinition",
												"src": "1901:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2113:28:1",
													"statements": [
														{
															"expression": {
																"arguments": [
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2130:1:1",
																		"type": "",
																		"value": "0"
																	},
																	{
																		"kind": "number",
																		"nodeType": "YulLiteral",
																		"src": "2133:1:1",
																		"type": "",
																		"value": "0"
																	}
																],
																"functionName": {
																	"name": "revert",
																	"nodeType": "YulIdentifier",
																	"src": "2123:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2123:12:1"
															},
															"nodeType": "YulExpressionStatement",
															"src": "2123:12:1"
														}
													]
												},
												"name": "revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b",
												"nodeType": "YulFunctionDefinition",
												"src": "2024:117:1"
											},
											{
												"body": {
													"nodeType": "YulBlock",
													"src": "2190:79:1",
													"statements": [
														{
															"body": {
																"nodeType": "YulBlock",
																"src": "2247:16:1",
																"statements": [
																	{
																		"expression": {
																			"arguments": [
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2256:1:1",
																					"type": "",
																					"value": "0"
																				},
																				{
																					"kind": "number",
																					"nodeType": "YulLiteral",
																					"src": "2259:1:1",
																					"type": "",
																					"value": "0"
																				}
																			],
																			"functionName": {
																				"name": "revert",
																				"nodeType": "YulIdentifier",
																				"src": "2249:6:1"
																			},
																			"nodeType": "YulFunctionCall",
																			"src": "2249:12:1"
																		},
																		"nodeType": "YulExpressionStatement",
																		"src": "2249:12:1"
																	}
																]
															},
															"condition": {
																"arguments": [
																	{
																		"arguments": [
																			{
																				"name": "value",
																				"nodeType": "YulIdentifier",
																				"src": "2213:5:1"
																			},
																			{
																				"arguments": [
																					{
																						"name": "value",
																						"nodeType": "YulIdentifier",
																						"src": "2238:5:1"
																					}
																				],
																				"functionName": {
																					"name": "cleanup_t_uint256",
																					"nodeType": "YulIdentifier",
																					"src": "2220:17:1"
																				},
																				"nodeType": "YulFunctionCall",
																				"src": "2220:24:1"
																			}
																		],
																		"functionName": {
																			"name": "eq",
																			"nodeType": "YulIdentifier",
																			"src": "2210:2:1"
																		},
																		"nodeType": "YulFunctionCall",
																		"src": "2210:35:1"
																	}
																],
																"functionName": {
																	"name": "iszero",
																	"nodeType": "YulIdentifier",
																	"src": "2203:6:1"
																},
																"nodeType": "YulFunctionCall",
																"src": "2203:43:1"
															},
															"nodeType": "YulIf",
															"src": "2200:63:1"
														}
													]
												},
												"name": "validator_revert_t_uint256",
												"nodeType": "YulFunctionDefinition",
												"parameters": [
													{
														"name": "value",
														"nodeType": "YulTypedName",
														"src": "2183:5:1",
														"type": ""
													}
												],
												"src": "2147:122:1"
											}
										]
									},
									"contents": "{\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_uint256(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack_library(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_library_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack_library(value0,  add(headStart, 0))\n\n    }\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function checked_add_t_uint256(x, y) -> sum {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n\n        // overflow, if x > (maxValue - y)\n        if gt(x, sub(0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff, y)) { panic_error_0x11() }\n\n        sum := add(x, y)\n    }\n\n    function checked_div_t_uint256(x, y) -> r {\n        x := cleanup_t_uint256(x)\n        y := cleanup_t_uint256(y)\n        if iszero(y) { panic_error_0x12() }\n\n        r := div(x, y)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function panic_error_0x11() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x11)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x12() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x12)\n        revert(0, 0x24)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n}\n",
									"id": 1,
									"language": "Yul",
									"name": "#utility.yul"
								}
							],
							"immutableReferences": {},
							"linkReferences": {},
							"object": "73000000000000000000000000000000000000000030146080604052600436106100355760003560e01c8063677342ce1461003a575b600080fd5b610054600480360381019061004f91906100e2565b61006a565b604051610061919061011e565b60405180910390f35b600080600260018461007c9190610139565b610086919061018f565b905060008390505b808210156100c35781905060028283866100a8919061018f565b6100b29190610139565b6100bc919061018f565b915061008e565b8092505050919050565b6000813590506100dc8161022d565b92915050565b6000602082840312156100f8576100f7610228565b5b6000610106848285016100cd565b91505092915050565b610118816101c0565b82525050565b6000602082019050610133600083018461010f565b92915050565b6000610144826101c0565b915061014f836101c0565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff03821115610184576101836101ca565b5b828201905092915050565b600061019a826101c0565b91506101a5836101c0565b9250826101b5576101b46101f9565b5b828204905092915050565b6000819050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b600080fd5b610236816101c0565b811461024157600080fd5b5056fea26469706673582212202a78fc5dab88cedf754122b92a8c1f87d505a22d037a6c92a26930a88b0fb42f64736f6c63430008070033",
							"opcodes": "PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x4 CALLDATASIZE LT PUSH2 0x35 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x677342CE EQ PUSH2 0x3A JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x54 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x4F SWAP2 SWAP1 PUSH2 0xE2 JUMP JUMPDEST PUSH2 0x6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x61 SWAP2 SWAP1 PUSH2 0x11E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x2 PUSH1 0x1 DUP5 PUSH2 0x7C SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST PUSH2 0x86 SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST SWAP1 POP PUSH1 0x0 DUP4 SWAP1 POP JUMPDEST DUP1 DUP3 LT ISZERO PUSH2 0xC3 JUMPI DUP2 SWAP1 POP PUSH1 0x2 DUP3 DUP4 DUP7 PUSH2 0xA8 SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST PUSH2 0xB2 SWAP2 SWAP1 PUSH2 0x139 JUMP JUMPDEST PUSH2 0xBC SWAP2 SWAP1 PUSH2 0x18F JUMP JUMPDEST SWAP2 POP PUSH2 0x8E JUMP JUMPDEST DUP1 SWAP3 POP POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0xDC DUP2 PUSH2 0x22D JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0xF8 JUMPI PUSH2 0xF7 PUSH2 0x228 JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x106 DUP5 DUP3 DUP6 ADD PUSH2 0xCD JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x118 DUP2 PUSH2 0x1C0 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x133 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x10F JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x144 DUP3 PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x14F DUP4 PUSH2 0x1C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF SUB DUP3 GT ISZERO PUSH2 0x184 JUMPI PUSH2 0x183 PUSH2 0x1CA JUMP JUMPDEST JUMPDEST DUP3 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x19A DUP3 PUSH2 0x1C0 JUMP JUMPDEST SWAP2 POP PUSH2 0x1A5 DUP4 PUSH2 0x1C0 JUMP JUMPDEST SWAP3 POP DUP3 PUSH2 0x1B5 JUMPI PUSH2 0x1B4 PUSH2 0x1F9 JUMP JUMPDEST JUMPDEST DUP3 DUP3 DIV SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x11 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x12 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x236 DUP2 PUSH2 0x1C0 JUMP JUMPDEST DUP2 EQ PUSH2 0x241 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 0x2A PUSH25 0xFC5DAB88CEDF754122B92A8C1F87D505A22D037A6C92A26930 0xA8 DUP12 0xF 0xB4 0x2F PUSH5 0x736F6C6343 STOP ADDMOD SMOD STOP CALLER ",
							"sourceMap": "202:1266:0:-:0;;;;;;;;;;;;;;;;;;;;;;;;1229:237;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;;1271:4;1287:6;1307:1;1301;1297;:5;;;;:::i;:::-;1296:12;;;;:::i;:::-;1287:21;;1310:6;1319:1;1310:10;;1331:105;1341:1;1337;:5;1331:105;;;1379:1;1375:5;;1419:1;1413;1409;1405;:5;;;;:::i;:::-;:9;;;;:::i;:::-;1403:17;;;;:::i;:::-;1399:21;;1331:105;;;1453:1;1446:8;;;;1229:237;;;:::o;7:139:1:-;53:5;91:6;78:20;69:29;;107:33;134:5;107:33;:::i;:::-;7:139;;;;:::o;152:329::-;211:6;260:2;248:9;239:7;235:23;231:32;228:119;;;266:79;;:::i;:::-;228:119;386:1;411:53;456:7;447:6;436:9;432:22;411:53;:::i;:::-;401:63;;357:117;152:329;;;;:::o;487:126::-;582:24;600:5;582:24;:::i;:::-;577:3;570:37;487:126;;:::o;619:238::-;720:4;758:2;747:9;743:18;735:26;;771:79;847:1;836:9;832:17;823:6;771:79;:::i;:::-;619:238;;;;:::o;944:305::-;984:3;1003:20;1021:1;1003:20;:::i;:::-;998:25;;1037:20;1055:1;1037:20;:::i;:::-;1032:25;;1191:1;1123:66;1119:74;1116:1;1113:81;1110:107;;;1197:18;;:::i;:::-;1110:107;1241:1;1238;1234:9;1227:16;;944:305;;;;:::o;1255:185::-;1295:1;1312:20;1330:1;1312:20;:::i;:::-;1307:25;;1346:20;1364:1;1346:20;:::i;:::-;1341:25;;1385:1;1375:35;;1390:18;;:::i;:::-;1375:35;1432:1;1429;1425:9;1420:14;;1255:185;;;;:::o;1446:77::-;1483:7;1512:5;1501:16;;1446:77;;;:::o;1529:180::-;1577:77;1574:1;1567:88;1674:4;1671:1;1664:15;1698:4;1695:1;1688:15;1715:180;1763:77;1760:1;1753:88;1860:4;1857:1;1850:15;1884:4;1881:1;1874:15;2024:117;2133:1;2130;2123:12;2147:122;2220:24;2238:5;2220:24;:::i;:::-;2213:5;2210:35;2200:63;;2259:1;2256;2249:12;2200:63;2147:122;:::o"
						},
						"gasEstimates": {
							"creation": {
								"codeDepositCost": "126800",
								"executionCost": "199",
								"totalCost": "126999"
							},
							"external": {
								"sqrt(uint256)": "infinite"
							},
							"internal": {
								"average(uint256,uint256)": "infinite",
								"ceilDiv(uint256,uint256)": "infinite",
								"max(uint256,uint256)": "infinite",
								"min(uint256,uint256)": "infinite"
							}
						},
						"legacyAssembly": {
							".code": [
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH #[$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH [$]",
									"source": 0,
									"value": "0000000000000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "B"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "CODECOPY",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP1",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "MLOAD",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "BYTE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "EQ",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH [tag]",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "JUMPI",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "4"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "24"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "REVERT",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "tag",
									"source": 0,
									"value": "1"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "JUMPDEST",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "ADDRESS",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "0"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "MSTORE",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "PUSH",
									"source": 0,
									"value": "73"
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "MSTORE8",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP3",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "DUP2",
									"source": 0
								},
								{
									"begin": 202,
									"end": 1468,
									"name": "RETURN",
									"source": 0
								}
							],
							".data": {
								"0": {
									".auxdata": "a26469706673582212202a78fc5dab88cedf754122b92a8c1f87d505a22d037a6c92a26930a88b0fb42f64736f6c63430008070033",
									".code": [
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSHDEPLOYADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "ADDRESS",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "80"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "MSTORE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "CALLDATALOAD",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "E0"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "SHR",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "677342CE"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "EQ",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "tag",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 202,
											"end": 1468,
											"name": "REVERT",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "CALLDATASIZE",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "ADD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "5"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "4"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "3"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "8"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "7"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "PUSH",
											"source": 0,
											"value": "40"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "MLOAD",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SUB",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "RETURN",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "tag",
											"source": 0,
											"value": "6"
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1271,
											"end": 1275,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1287,
											"end": 1293,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1307,
											"end": 1308,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1301,
											"end": 1302,
											"name": "PUSH",
											"source": 0,
											"value": "1"
										},
										{
											"begin": 1297,
											"end": 1298,
											"name": "DUP5",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "tag",
											"source": 0,
											"value": "10"
										},
										{
											"begin": 1297,
											"end": 1302,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "tag",
											"source": 0,
											"value": "12"
										},
										{
											"begin": 1296,
											"end": 1308,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1308,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1287,
											"end": 1308,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1316,
											"name": "PUSH",
											"source": 0,
											"value": "0"
										},
										{
											"begin": 1319,
											"end": 1320,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1320,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1310,
											"end": 1320,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1341,
											"end": 1342,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1338,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1337,
											"end": 1342,
											"name": "LT",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "ISZERO",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "JUMPI",
											"source": 0
										},
										{
											"begin": 1379,
											"end": 1380,
											"name": "DUP2",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1380,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1375,
											"end": 1380,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1419,
											"end": 1420,
											"name": "PUSH",
											"source": 0,
											"value": "2"
										},
										{
											"begin": 1413,
											"end": 1414,
											"name": "DUP3",
											"source": 0
										},
										{
											"begin": 1409,
											"end": 1410,
											"name": "DUP4",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1406,
											"name": "DUP7",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "tag",
											"source": 0,
											"value": "16"
										},
										{
											"begin": 1405,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "11"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "tag",
											"source": 0,
											"value": "17"
										},
										{
											"begin": 1405,
											"end": 1414,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "13"
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "JUMP",
											"source": 0,
											"value": "[in]"
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "tag",
											"source": 0,
											"value": "18"
										},
										{
											"begin": 1403,
											"end": 1420,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1399,
											"end": 1420,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "PUSH [tag]",
											"source": 0,
											"value": "14"
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "JUMP",
											"source": 0
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "tag",
											"source": 0,
											"value": "15"
										},
										{
											"begin": 1331,
											"end": 1436,
											"name": "JUMPDEST",
											"source": 0
										},
										{
											"begin": 1453,
											"end": 1454,
											"name": "DUP1",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "SWAP3",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1446,
											"end": 1454,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP2",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "SWAP1",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "POP",
											"source": 0
										},
										{
											"begin": 1229,
											"end": 1466,
											"name": "JUMP",
											"source": 0,
											"value": "[out]"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "tag",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 53,
											"end": 58,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 91,
											"end": 97,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 78,
											"end": 98,
											"name": "CALLDATALOAD",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 69,
											"end": 98,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 134,
											"end": 139,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 107,
											"end": 140,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "tag",
											"source": 1,
											"value": "22"
										},
										{
											"begin": 107,
											"end": 140,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 7,
											"end": 146,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "tag",
											"source": 1,
											"value": "5"
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 211,
											"end": 217,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 260,
											"end": 262,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 248,
											"end": 257,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 239,
											"end": 246,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 235,
											"end": 258,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 231,
											"end": 263,
											"name": "SLT",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "tag",
											"source": 1,
											"value": "26"
										},
										{
											"begin": 266,
											"end": 345,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 228,
											"end": 347,
											"name": "tag",
											"source": 1,
											"value": "25"
										},
										{
											"begin": 228,
											"end": 347,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 386,
											"end": 387,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 456,
											"end": 463,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 447,
											"end": 453,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 436,
											"end": 445,
											"name": "DUP6",
											"source": 1
										},
										{
											"begin": 432,
											"end": 454,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 411,
											"end": 464,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "tag",
											"source": 1,
											"value": "28"
										},
										{
											"begin": 411,
											"end": 464,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 401,
											"end": 464,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 357,
											"end": 474,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 152,
											"end": 481,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 487,
											"end": 613,
											"name": "tag",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 487,
											"end": 613,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 582,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 600,
											"end": 605,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 582,
											"end": 606,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 582,
											"end": 606,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 582,
											"end": 606,
											"name": "tag",
											"source": 1,
											"value": "31"
										},
										{
											"begin": 582,
											"end": 606,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 577,
											"end": 580,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 570,
											"end": 607,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 487,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 613,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 487,
											"end": 613,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 619,
											"end": 857,
											"name": "tag",
											"source": 1,
											"value": "8"
										},
										{
											"begin": 619,
											"end": 857,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 720,
											"end": 724,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 758,
											"end": 760,
											"name": "PUSH",
											"source": 1,
											"value": "20"
										},
										{
											"begin": 747,
											"end": 756,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 743,
											"end": 761,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 735,
											"end": 761,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 735,
											"end": 761,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 771,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 847,
											"end": 848,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 836,
											"end": 845,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 832,
											"end": 849,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 823,
											"end": 829,
											"name": "DUP5",
											"source": 1
										},
										{
											"begin": 771,
											"end": 850,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "29"
										},
										{
											"begin": 771,
											"end": 850,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 771,
											"end": 850,
											"name": "tag",
											"source": 1,
											"value": "34"
										},
										{
											"begin": 771,
											"end": 850,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 619,
											"end": 857,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 619,
											"end": 857,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 619,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 857,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 619,
											"end": 857,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "tag",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 984,
											"end": 987,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1003,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1021,
											"end": 1022,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1003,
											"end": 1023,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1003,
											"end": 1023,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1003,
											"end": 1023,
											"name": "tag",
											"source": 1,
											"value": "38"
										},
										{
											"begin": 1003,
											"end": 1023,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1023,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 998,
											"end": 1023,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1055,
											"end": 1056,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1037,
											"end": 1057,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1037,
											"end": 1057,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1037,
											"end": 1057,
											"name": "tag",
											"source": 1,
											"value": "39"
										},
										{
											"begin": 1037,
											"end": 1057,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1057,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1032,
											"end": 1057,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1191,
											"end": 1192,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1123,
											"end": 1189,
											"name": "PUSH",
											"source": 1,
											"value": "FFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF"
										},
										{
											"begin": 1119,
											"end": 1193,
											"name": "SUB",
											"source": 1
										},
										{
											"begin": 1116,
											"end": 1117,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1113,
											"end": 1194,
											"name": "GT",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1217,
											"name": "ISZERO",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1217,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1217,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "tag",
											"source": 1,
											"value": "41"
										},
										{
											"begin": 1197,
											"end": 1215,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1110,
											"end": 1217,
											"name": "tag",
											"source": 1,
											"value": "40"
										},
										{
											"begin": 1110,
											"end": 1217,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1241,
											"end": 1242,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1238,
											"end": 1239,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1234,
											"end": 1243,
											"name": "ADD",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1227,
											"end": 1243,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 944,
											"end": 1249,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "tag",
											"source": 1,
											"value": "13"
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1295,
											"end": 1296,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1330,
											"end": 1331,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "tag",
											"source": 1,
											"value": "44"
										},
										{
											"begin": 1312,
											"end": 1332,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1332,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1307,
											"end": 1332,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1364,
											"end": 1365,
											"name": "DUP4",
											"source": 1
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "tag",
											"source": 1,
											"value": "45"
										},
										{
											"begin": 1346,
											"end": 1366,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1366,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1341,
											"end": 1366,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1385,
											"end": 1386,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1410,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1375,
											"end": 1410,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "tag",
											"source": 1,
											"value": "47"
										},
										{
											"begin": 1390,
											"end": 1408,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1375,
											"end": 1410,
											"name": "tag",
											"source": 1,
											"value": "46"
										},
										{
											"begin": 1375,
											"end": 1410,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1432,
											"end": 1433,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1429,
											"end": 1430,
											"name": "DUP3",
											"source": 1
										},
										{
											"begin": 1425,
											"end": 1434,
											"name": "DIV",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1434,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1420,
											"end": 1434,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "SWAP3",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1255,
											"end": 1440,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1446,
											"end": 1523,
											"name": "tag",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 1446,
											"end": 1523,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1483,
											"end": 1490,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1512,
											"end": 1517,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1517,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1501,
											"end": 1517,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1523,
											"name": "SWAP2",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1523,
											"name": "SWAP1",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1523,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 1446,
											"end": 1523,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										},
										{
											"begin": 1529,
											"end": 1709,
											"name": "tag",
											"source": 1,
											"value": "42"
										},
										{
											"begin": 1529,
											"end": 1709,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1577,
											"end": 1654,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1574,
											"end": 1575,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1567,
											"end": 1655,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1674,
											"end": 1678,
											"name": "PUSH",
											"source": 1,
											"value": "11"
										},
										{
											"begin": 1671,
											"end": 1672,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1664,
											"end": 1679,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1698,
											"end": 1702,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1695,
											"end": 1696,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1688,
											"end": 1703,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 1715,
											"end": 1895,
											"name": "tag",
											"source": 1,
											"value": "48"
										},
										{
											"begin": 1715,
											"end": 1895,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 1763,
											"end": 1840,
											"name": "PUSH",
											"source": 1,
											"value": "4E487B7100000000000000000000000000000000000000000000000000000000"
										},
										{
											"begin": 1760,
											"end": 1761,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1753,
											"end": 1841,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1860,
											"end": 1864,
											"name": "PUSH",
											"source": 1,
											"value": "12"
										},
										{
											"begin": 1857,
											"end": 1858,
											"name": "PUSH",
											"source": 1,
											"value": "4"
										},
										{
											"begin": 1850,
											"end": 1865,
											"name": "MSTORE",
											"source": 1
										},
										{
											"begin": 1884,
											"end": 1888,
											"name": "PUSH",
											"source": 1,
											"value": "24"
										},
										{
											"begin": 1881,
											"end": 1882,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 1874,
											"end": 1889,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2024,
											"end": 2141,
											"name": "tag",
											"source": 1,
											"value": "27"
										},
										{
											"begin": 2024,
											"end": 2141,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2133,
											"end": 2134,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2130,
											"end": 2131,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2123,
											"end": 2135,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2269,
											"name": "tag",
											"source": 1,
											"value": "23"
										},
										{
											"begin": 2147,
											"end": 2269,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2238,
											"end": 2243,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "32"
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "JUMP",
											"source": 1,
											"value": "[in]"
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "tag",
											"source": 1,
											"value": "56"
										},
										{
											"begin": 2220,
											"end": 2244,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2213,
											"end": 2218,
											"name": "DUP2",
											"source": 1
										},
										{
											"begin": 2210,
											"end": 2245,
											"name": "EQ",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2263,
											"name": "PUSH [tag]",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2200,
											"end": 2263,
											"name": "JUMPI",
											"source": 1
										},
										{
											"begin": 2259,
											"end": 2260,
											"name": "PUSH",
											"source": 1,
											"value": "0"
										},
										{
											"begin": 2256,
											"end": 2257,
											"name": "DUP1",
											"source": 1
										},
										{
											"begin": 2249,
											"end": 2261,
											"name": "REVERT",
											"source": 1
										},
										{
											"begin": 2200,
											"end": 2263,
											"name": "tag",
											"source": 1,
											"value": "57"
										},
										{
											"begin": 2200,
											"end": 2263,
											"name": "JUMPDEST",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2269,
											"name": "POP",
											"source": 1
										},
										{
											"begin": 2147,
											"end": 2269,
											"name": "JUMP",
											"source": 1,
											"value": "[out]"
										}
									]
								}
							}
						},
						"methodIdentifiers": {
							"sqrt(uint256)": "677342ce"
						}
					},
					"metadata": "{\"compiler\":{\"version\":\"0.8.7+commit.e28d00a7\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"x\",\"type\":\"uint256\"}],\"name\":\"sqrt\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Standard math utilities missing in the Solidity language.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":\"Math\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\".deps/npm/@openzeppelin/contracts/utils/math/Math.sol\":{\"keccak256\":\"0xcfd748fe89e9aa6c5064c117fc75263d0f9a58f70aa88a06839ed7c3535788c0\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://991b9f540561e20c03af6135b2936f13c173ff6852fc02f91592ebdaa884f953\",\"dweb:/ipfs/Qmd2ipdqo7ng6SfPUzUrngSAAXngzCiV3TWmta9zYgdwcv\"]}},\"version\":1}",
					"storageLayout": {
						"storage": [],
						"types": null
					},
					"userdoc": {
						"kind": "user",
						"methods": {},
						"version": 1
					}
				}
			}
		},
		"sources": {
			".deps/npm/@openzeppelin/contracts/utils/math/Math.sol": {
				"ast": {
					"absolutePath": ".deps/npm/@openzeppelin/contracts/utils/math/Math.sol",
					"exportedSymbols": {
						"Math": [
							130
						]
					},
					"id": 131,
					"license": "MIT",
					"nodeType": "SourceUnit",
					"nodes": [
						{
							"id": 1,
							"literals": [
								"solidity",
								"^",
								"0.8",
								".0"
							],
							"nodeType": "PragmaDirective",
							"src": "103:23:0"
						},
						{
							"abstract": false,
							"baseContracts": [],
							"contractDependencies": [],
							"contractKind": "library",
							"documentation": {
								"id": 2,
								"nodeType": "StructuredDocumentation",
								"src": "128:73:0",
								"text": " @dev Standard math utilities missing in the Solidity language."
							},
							"fullyImplemented": true,
							"id": 130,
							"linearizedBaseContracts": [
								130
							],
							"name": "Math",
							"nameLocation": "210:4:0",
							"nodeType": "ContractDefinition",
							"nodes": [
								{
									"body": {
										"id": 19,
										"nodeType": "Block",
										"src": "352:38:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 14,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 12,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 5,
															"src": "369:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": ">=",
														"rightExpression": {
															"id": 13,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 7,
															"src": "374:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "369:6:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 16,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 7,
														"src": "382:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 17,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "369:14:0",
													"trueExpression": {
														"id": 15,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 5,
														"src": "378:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 11,
												"id": 18,
												"nodeType": "Return",
												"src": "362:21:0"
											}
										]
									},
									"documentation": {
										"id": 3,
										"nodeType": "StructuredDocumentation",
										"src": "221:59:0",
										"text": " @dev Returns the largest of two numbers."
									},
									"id": 20,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "max",
									"nameLocation": "294:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 8,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 5,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "306:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "298:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 4,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "298:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 7,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "317:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "309:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 6,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "309:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "297:22:0"
									},
									"returnParameters": {
										"id": 11,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 10,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 20,
												"src": "343:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 9,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "343:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "342:9:0"
									},
									"scope": 130,
									"src": "285:105:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 37,
										"nodeType": "Block",
										"src": "528:37:0",
										"statements": [
											{
												"expression": {
													"condition": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 32,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 30,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 23,
															"src": "545:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "<",
														"rightExpression": {
															"id": 31,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 25,
															"src": "549:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "545:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_bool",
															"typeString": "bool"
														}
													},
													"falseExpression": {
														"id": 34,
														"name": "b",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 25,
														"src": "557:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"id": 35,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"nodeType": "Conditional",
													"src": "545:13:0",
													"trueExpression": {
														"id": 33,
														"name": "a",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 23,
														"src": "553:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 29,
												"id": 36,
												"nodeType": "Return",
												"src": "538:20:0"
											}
										]
									},
									"documentation": {
										"id": 21,
										"nodeType": "StructuredDocumentation",
										"src": "396:60:0",
										"text": " @dev Returns the smallest of two numbers."
									},
									"id": 38,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "min",
									"nameLocation": "470:3:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 26,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 23,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "482:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "474:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 22,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "474:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 25,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "493:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "485:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 24,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "485:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "473:22:0"
									},
									"returnParameters": {
										"id": 29,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 28,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 38,
												"src": "519:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 27,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "519:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "518:9:0"
									},
									"scope": 130,
									"src": "461:104:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 60,
										"nodeType": "Block",
										"src": "749:82:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 58,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 50,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 48,
																	"name": "a",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 41,
																	"src": "804:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "&",
																"rightExpression": {
																	"id": 49,
																	"name": "b",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 43,
																	"src": "808:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "804:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 51,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "803:7:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 57,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"components": [
																{
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 54,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"id": 52,
																		"name": "a",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 41,
																		"src": "814:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "^",
																	"rightExpression": {
																		"id": 53,
																		"name": "b",
																		"nodeType": "Identifier",
																		"overloadedDeclarations": [],
																		"referencedDeclaration": 43,
																		"src": "818:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"src": "814:5:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																}
															],
															"id": 55,
															"isConstant": false,
															"isInlineArray": false,
															"isLValue": false,
															"isPure": false,
															"lValueRequested": false,
															"nodeType": "TupleExpression",
															"src": "813:7:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"hexValue": "32",
															"id": 56,
															"isConstant": false,
															"isLValue": false,
															"isPure": true,
															"kind": "number",
															"lValueRequested": false,
															"nodeType": "Literal",
															"src": "823:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_rational_2_by_1",
																"typeString": "int_const 2"
															},
															"value": "2"
														},
														"src": "813:11:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "803:21:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 47,
												"id": 59,
												"nodeType": "Return",
												"src": "796:28:0"
											}
										]
									},
									"documentation": {
										"id": 39,
										"nodeType": "StructuredDocumentation",
										"src": "571:102:0",
										"text": " @dev Returns the average of two numbers. The result is rounded towards\n zero."
									},
									"id": 61,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "average",
									"nameLocation": "687:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 44,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 41,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "703:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "695:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 40,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "695:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 43,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "714:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "706:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 42,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "706:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "694:22:0"
									},
									"returnParameters": {
										"id": 47,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 46,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 61,
												"src": "740:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 45,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "740:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "739:9:0"
									},
									"scope": 130,
									"src": "678:153:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 85,
										"nodeType": "Block",
										"src": "1101:123:0",
										"statements": [
											{
												"expression": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 83,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"commonType": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"id": 73,
														"isConstant": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"leftExpression": {
															"id": 71,
															"name": "a",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 64,
															"src": "1189:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"nodeType": "BinaryOperation",
														"operator": "/",
														"rightExpression": {
															"id": 72,
															"name": "b",
															"nodeType": "Identifier",
															"overloadedDeclarations": [],
															"referencedDeclaration": 66,
															"src": "1193:1:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"src": "1189:5:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "+",
													"rightExpression": {
														"components": [
															{
																"condition": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 78,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"commonType": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		},
																		"id": 76,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"leftExpression": {
																			"id": 74,
																			"name": "a",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 64,
																			"src": "1198:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"nodeType": "BinaryOperation",
																		"operator": "%",
																		"rightExpression": {
																			"id": 75,
																			"name": "b",
																			"nodeType": "Identifier",
																			"overloadedDeclarations": [],
																			"referencedDeclaration": 66,
																			"src": "1202:1:0",
																			"typeDescriptions": {
																				"typeIdentifier": "t_uint256",
																				"typeString": "uint256"
																			}
																		},
																		"src": "1198:5:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "==",
																	"rightExpression": {
																		"hexValue": "30",
																		"id": 77,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1207:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_0_by_1",
																			"typeString": "int_const 0"
																		},
																		"value": "0"
																	},
																	"src": "1198:10:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_bool",
																		"typeString": "bool"
																	}
																},
																"falseExpression": {
																	"hexValue": "31",
																	"id": 80,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1215:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"id": 81,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"nodeType": "Conditional",
																"src": "1198:18:0",
																"trueExpression": {
																	"hexValue": "30",
																	"id": 79,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1211:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_0_by_1",
																		"typeString": "int_const 0"
																	},
																	"value": "0"
																},
																"typeDescriptions": {
																	"typeIdentifier": "t_uint8",
																	"typeString": "uint8"
																}
															}
														],
														"id": 82,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1197:20:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint8",
															"typeString": "uint8"
														}
													},
													"src": "1189:28:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 70,
												"id": 84,
												"nodeType": "Return",
												"src": "1182:35:0"
											}
										]
									},
									"documentation": {
										"id": 62,
										"nodeType": "StructuredDocumentation",
										"src": "837:188:0",
										"text": " @dev Returns the ceiling of the division of two numbers.\n This differs from standard division with `/` in that it rounds up instead\n of rounding down."
									},
									"id": 86,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "ceilDiv",
									"nameLocation": "1039:7:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 67,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 64,
												"mutability": "mutable",
												"name": "a",
												"nameLocation": "1055:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1047:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 63,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1047:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											},
											{
												"constant": false,
												"id": 66,
												"mutability": "mutable",
												"name": "b",
												"nameLocation": "1066:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1058:9:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 65,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1058:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1046:22:0"
									},
									"returnParameters": {
										"id": 70,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 69,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 86,
												"src": "1092:7:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 68,
													"name": "uint256",
													"nodeType": "ElementaryTypeName",
													"src": "1092:7:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1091:9:0"
									},
									"scope": 130,
									"src": "1030:194:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "internal"
								},
								{
									"body": {
										"id": 128,
										"nodeType": "Block",
										"src": "1277:189:0",
										"statements": [
											{
												"assignments": [
													94
												],
												"declarations": [
													{
														"constant": false,
														"id": 94,
														"mutability": "mutable",
														"name": "z",
														"nameLocation": "1292:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "1287:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 93,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1287:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 101,
												"initialValue": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 100,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"components": [
															{
																"commonType": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																},
																"id": 97,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftExpression": {
																	"id": 95,
																	"name": "x",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 88,
																	"src": "1297:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "BinaryOperation",
																"operator": "+",
																"rightExpression": {
																	"hexValue": "31",
																	"id": 96,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": true,
																	"kind": "number",
																	"lValueRequested": false,
																	"nodeType": "Literal",
																	"src": "1301:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_rational_1_by_1",
																		"typeString": "int_const 1"
																	},
																	"value": "1"
																},
																"src": "1297:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															}
														],
														"id": 98,
														"isConstant": false,
														"isInlineArray": false,
														"isLValue": false,
														"isPure": false,
														"lValueRequested": false,
														"nodeType": "TupleExpression",
														"src": "1296:8:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "/",
													"rightExpression": {
														"hexValue": "32",
														"id": 99,
														"isConstant": false,
														"isLValue": false,
														"isPure": true,
														"kind": "number",
														"lValueRequested": false,
														"nodeType": "Literal",
														"src": "1307:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_rational_2_by_1",
															"typeString": "int_const 2"
														},
														"value": "2"
													},
													"src": "1296:12:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1287:21:0"
											},
											{
												"assignments": [
													103
												],
												"declarations": [
													{
														"constant": false,
														"id": 103,
														"mutability": "mutable",
														"name": "y",
														"nameLocation": "1315:1:0",
														"nodeType": "VariableDeclaration",
														"scope": 128,
														"src": "1310:6:0",
														"stateVariable": false,
														"storageLocation": "default",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														},
														"typeName": {
															"id": 102,
															"name": "uint",
															"nodeType": "ElementaryTypeName",
															"src": "1310:4:0",
															"typeDescriptions": {
																"typeIdentifier": "t_uint256",
																"typeString": "uint256"
															}
														},
														"visibility": "internal"
													}
												],
												"id": 105,
												"initialValue": {
													"id": 104,
													"name": "x",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 88,
													"src": "1319:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"nodeType": "VariableDeclarationStatement",
												"src": "1310:10:0"
											},
											{
												"body": {
													"id": 124,
													"nodeType": "Block",
													"src": "1356:80:0",
													"statements": [
														{
															"expression": {
																"id": 111,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 109,
																	"name": "y",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 103,
																	"src": "1375:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"id": 110,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "1379:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1375:5:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 112,
															"nodeType": "ExpressionStatement",
															"src": "1375:5:0"
														},
														{
															"expression": {
																"id": 122,
																"isConstant": false,
																"isLValue": false,
																"isPure": false,
																"lValueRequested": false,
																"leftHandSide": {
																	"id": 113,
																	"name": "z",
																	"nodeType": "Identifier",
																	"overloadedDeclarations": [],
																	"referencedDeclaration": 94,
																	"src": "1399:1:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"nodeType": "Assignment",
																"operator": "=",
																"rightHandSide": {
																	"commonType": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	},
																	"id": 121,
																	"isConstant": false,
																	"isLValue": false,
																	"isPure": false,
																	"lValueRequested": false,
																	"leftExpression": {
																		"components": [
																			{
																				"commonType": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				},
																				"id": 118,
																				"isConstant": false,
																				"isLValue": false,
																				"isPure": false,
																				"lValueRequested": false,
																				"leftExpression": {
																					"commonType": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					},
																					"id": 116,
																					"isConstant": false,
																					"isLValue": false,
																					"isPure": false,
																					"lValueRequested": false,
																					"leftExpression": {
																						"id": 114,
																						"name": "x",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 88,
																						"src": "1405:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"nodeType": "BinaryOperation",
																					"operator": "/",
																					"rightExpression": {
																						"id": 115,
																						"name": "z",
																						"nodeType": "Identifier",
																						"overloadedDeclarations": [],
																						"referencedDeclaration": 94,
																						"src": "1409:1:0",
																						"typeDescriptions": {
																							"typeIdentifier": "t_uint256",
																							"typeString": "uint256"
																						}
																					},
																					"src": "1405:5:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"nodeType": "BinaryOperation",
																				"operator": "+",
																				"rightExpression": {
																					"id": 117,
																					"name": "z",
																					"nodeType": "Identifier",
																					"overloadedDeclarations": [],
																					"referencedDeclaration": 94,
																					"src": "1413:1:0",
																					"typeDescriptions": {
																						"typeIdentifier": "t_uint256",
																						"typeString": "uint256"
																					}
																				},
																				"src": "1405:9:0",
																				"typeDescriptions": {
																					"typeIdentifier": "t_uint256",
																					"typeString": "uint256"
																				}
																			}
																		],
																		"id": 119,
																		"isConstant": false,
																		"isInlineArray": false,
																		"isLValue": false,
																		"isPure": false,
																		"lValueRequested": false,
																		"nodeType": "TupleExpression",
																		"src": "1403:13:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_uint256",
																			"typeString": "uint256"
																		}
																	},
																	"nodeType": "BinaryOperation",
																	"operator": "/",
																	"rightExpression": {
																		"hexValue": "32",
																		"id": 120,
																		"isConstant": false,
																		"isLValue": false,
																		"isPure": true,
																		"kind": "number",
																		"lValueRequested": false,
																		"nodeType": "Literal",
																		"src": "1419:1:0",
																		"typeDescriptions": {
																			"typeIdentifier": "t_rational_2_by_1",
																			"typeString": "int_const 2"
																		},
																		"value": "2"
																	},
																	"src": "1403:17:0",
																	"typeDescriptions": {
																		"typeIdentifier": "t_uint256",
																		"typeString": "uint256"
																	}
																},
																"src": "1399:21:0",
																"typeDescriptions": {
																	"typeIdentifier": "t_uint256",
																	"typeString": "uint256"
																}
															},
															"id": 123,
															"nodeType": "ExpressionStatement",
															"src": "1399:21:0"
														}
													]
												},
												"condition": {
													"commonType": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													},
													"id": 108,
													"isConstant": false,
													"isLValue": false,
													"isPure": false,
													"lValueRequested": false,
													"leftExpression": {
														"id": 106,
														"name": "z",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 94,
														"src": "1337:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"nodeType": "BinaryOperation",
													"operator": "<",
													"rightExpression": {
														"id": 107,
														"name": "y",
														"nodeType": "Identifier",
														"overloadedDeclarations": [],
														"referencedDeclaration": 103,
														"src": "1341:1:0",
														"typeDescriptions": {
															"typeIdentifier": "t_uint256",
															"typeString": "uint256"
														}
													},
													"src": "1337:5:0",
													"typeDescriptions": {
														"typeIdentifier": "t_bool",
														"typeString": "bool"
													}
												},
												"id": 125,
												"nodeType": "WhileStatement",
												"src": "1331:105:0"
											},
											{
												"expression": {
													"id": 126,
													"name": "y",
													"nodeType": "Identifier",
													"overloadedDeclarations": [],
													"referencedDeclaration": 103,
													"src": "1453:1:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"functionReturnParameters": 92,
												"id": 127,
												"nodeType": "Return",
												"src": "1446:8:0"
											}
										]
									},
									"functionSelector": "677342ce",
									"id": 129,
									"implemented": true,
									"kind": "function",
									"modifiers": [],
									"name": "sqrt",
									"nameLocation": "1238:4:0",
									"nodeType": "FunctionDefinition",
									"parameters": {
										"id": 89,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 88,
												"mutability": "mutable",
												"name": "x",
												"nameLocation": "1248:1:0",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1243:6:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 87,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1243:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1242:8:0"
									},
									"returnParameters": {
										"id": 92,
										"nodeType": "ParameterList",
										"parameters": [
											{
												"constant": false,
												"id": 91,
												"mutability": "mutable",
												"name": "",
												"nameLocation": "-1:-1:-1",
												"nodeType": "VariableDeclaration",
												"scope": 129,
												"src": "1271:4:0",
												"stateVariable": false,
												"storageLocation": "default",
												"typeDescriptions": {
													"typeIdentifier": "t_uint256",
													"typeString": "uint256"
												},
												"typeName": {
													"id": 90,
													"name": "uint",
													"nodeType": "ElementaryTypeName",
													"src": "1271:4:0",
													"typeDescriptions": {
														"typeIdentifier": "t_uint256",
														"typeString": "uint256"
													}
												},
												"visibility": "internal"
											}
										],
										"src": "1270:6:0"
									},
									"scope": 130,
									"src": "1229:237:0",
									"stateMutability": "pure",
									"virtual": false,
									"visibility": "public"
								}
							],
							"scope": 131,
							"src": "202:1266:0",
							"usedErrors": []
						}
					],
					"src": "103:1366:0"
				},
				"id": 0
			}
		}
	}
}